{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, signal } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\nimport { FormsModule } from \"@angular/forms\";\nlet HeaderComponent = class HeaderComponent {\n  constructor(authService, cartService, router) {\n    this.authService = authService;\n    this.cartService = cartService;\n    this.router = router;\n    this.searchQuery = \"\";\n    this.showUserMenu = signal(false);\n    this.isAuthenticated = signal(false);\n    this.currentUser = signal(null);\n    this.cartItemsCount = signal(0);\n  }\n  ngOnInit() {\n    this.authService.currentUser$.subscribe(user => {\n      this.currentUser.set(user);\n      this.isAuthenticated.set(!!user);\n    });\n    this.cartService.cart$.subscribe(cart => {\n      const count = cart?.items.reduce((total, item) => total + item.quantity, 0) || 0;\n      this.cartItemsCount.set(count);\n    });\n    if (this.isAuthenticated()) {\n      this.cartService.getCart().subscribe(cart => {\n        this.cartService.updateCartState(cart);\n      });\n    }\n  }\n  onSearch() {\n    if (this.searchQuery.trim()) {\n      this.router.navigate([\"/products\"], {\n        queryParams: {\n          search: this.searchQuery.trim()\n        }\n      });\n    }\n  }\n  toggleUserMenu() {\n    this.showUserMenu.update(show => !show);\n  }\n  logout() {\n    this.authService.logout();\n    this.showUserMenu.set(false);\n  }\n};\nHeaderComponent = __decorate([Component({\n  selector: \"app-header\",\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule],\n  template: `\n    <header class=\"bg-white shadow-soft sticky top-0 z-50\">\n      <div class=\"container mx-auto px-4\">\n        <div class=\"flex items-center justify-between h-16\">\n          <!-- Logo -->\n          <div class=\"flex items-center\">\n            <a routerLink=\"/\" class=\"flex items-center space-x-2\">\n              <div class=\"w-8 h-8 bg-primary rounded-lg flex items-center justify-center\">\n                <span class=\"text-white font-bold text-lg\">M</span>\n              </div>\n              <span class=\"text-xl font-bold text-dark\">Marketplace</span>\n            </a>\n          </div>\n\n          <!-- Search Bar -->\n          <div class=\"flex-1 max-w-xl mx-8\">\n            <div class=\"relative\">\n              <input\n                type=\"text\"\n                [(ngModel)]=\"searchQuery\"\n                (keyup.enter)=\"onSearch()\"\n                placeholder=\"Rechercher des produits...\"\n                class=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent\"\n              >\n              <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n                </svg>\n              </div>\n            </div>\n          </div>\n\n          <!-- Navigation -->\n          <nav class=\"flex items-center space-x-6\">\n            <!-- Cart -->\n            <a routerLink=\"/cart\" class=\"relative p-2 text-gray-600 hover:text-primary transition-colors\">\n              <svg class=\"h-6 w-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-1.5 6M7 13l-1.5 6m0 0h9m-9 0V19a2 2 0 002 2h7a2 2 0 002-2v-4.5M9 7h6\"></path>\n              </svg>\n              @if (cartItemsCount() > 0) {\n                <span class=\"absolute -top-1 -right-1 bg-secondary text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\n                  {{ cartItemsCount() }}\n                </span>\n              }\n            </a>\n\n            <!-- User Menu -->\n            @if (isAuthenticated()) {\n              <div class=\"relative\" (click)=\"toggleUserMenu()\">\n                <button class=\"flex items-center space-x-2 text-gray-600 hover:text-primary transition-colors\">\n                  <div class=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center\">\n                    <span class=\"text-white text-sm font-medium\">\n                      {{ currentUser()?.username?.charAt(0).toUpperCase() }}\n                    </span>\n                  </div>\n                  <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n                  </svg>\n                </button>\n\n                @if (showUserMenu()) {\n                  <div class=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-strong py-2 z-50\">\n                    <a routerLink=\"/profile\" class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\n                      Mon Profil\n                    </a>\n                    <a routerLink=\"/profile/orders\" class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\n                      Mes Commandes\n                    </a>\n                    <hr class=\"my-1\">\n                    <button (click)=\"logout()\" class=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\n                      DÃ©connexion\n                    </button>\n                  </div>\n                }\n              </div>\n            } @else {\n              <div class=\"flex items-center space-x-4\">\n                <a routerLink=\"/auth/login\" class=\"text-gray-600 hover:text-primary transition-colors\">\n                  Connexion\n                </a>\n                <a routerLink=\"/auth/register\" class=\"btn-primary\">\n                  Inscription\n                </a>\n              </div>\n            }\n          </nav>\n        </div>\n      </div>\n    </header>\n  `\n})], HeaderComponent);\nexport { HeaderComponent };","map":{"version":3,"names":["Component","signal","CommonModule","RouterModule","FormsModule","HeaderComponent","constructor","authService","cartService","router","searchQuery","showUserMenu","isAuthenticated","currentUser","cartItemsCount","ngOnInit","currentUser$","subscribe","user","set","cart$","cart","count","items","reduce","total","item","quantity","getCart","updateCartState","onSearch","trim","navigate","queryParams","search","toggleUserMenu","update","show","logout","__decorate","selector","standalone","imports","template"],"sources":["C:\\Users\\SetupGame\\Documents\\GitHub\\stage2025\\src\\main\\frontend\\src\\app\\shared\\components\\header\\header.component.ts"],"sourcesContent":["import { Component, type OnInit, signal } from \"@angular/core\"\r\nimport { CommonModule } from \"@angular/common\"\r\nimport { RouterModule, type Router } from \"@angular/router\"\r\nimport { FormsModule } from \"@angular/forms\"\r\nimport type { AuthService } from \"../../../core/services/auth.service\"\r\nimport type { CartService } from \"../../../core/services/cart.service\"\r\nimport type { User } from \"../../../core/models/user.model\"\r\n\r\n@Component({\r\n    selector: \"app-header\",\r\n    standalone: true,\r\n    imports: [CommonModule, RouterModule, FormsModule],\r\n    template: `\r\n    <header class=\"bg-white shadow-soft sticky top-0 z-50\">\r\n      <div class=\"container mx-auto px-4\">\r\n        <div class=\"flex items-center justify-between h-16\">\r\n          <!-- Logo -->\r\n          <div class=\"flex items-center\">\r\n            <a routerLink=\"/\" class=\"flex items-center space-x-2\">\r\n              <div class=\"w-8 h-8 bg-primary rounded-lg flex items-center justify-center\">\r\n                <span class=\"text-white font-bold text-lg\">M</span>\r\n              </div>\r\n              <span class=\"text-xl font-bold text-dark\">Marketplace</span>\r\n            </a>\r\n          </div>\r\n\r\n          <!-- Search Bar -->\r\n          <div class=\"flex-1 max-w-xl mx-8\">\r\n            <div class=\"relative\">\r\n              <input\r\n                type=\"text\"\r\n                [(ngModel)]=\"searchQuery\"\r\n                (keyup.enter)=\"onSearch()\"\r\n                placeholder=\"Rechercher des produits...\"\r\n                class=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent\"\r\n              >\r\n              <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Navigation -->\r\n          <nav class=\"flex items-center space-x-6\">\r\n            <!-- Cart -->\r\n            <a routerLink=\"/cart\" class=\"relative p-2 text-gray-600 hover:text-primary transition-colors\">\r\n              <svg class=\"h-6 w-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-1.5 6M7 13l-1.5 6m0 0h9m-9 0V19a2 2 0 002 2h7a2 2 0 002-2v-4.5M9 7h6\"></path>\r\n              </svg>\r\n              @if (cartItemsCount() > 0) {\r\n                <span class=\"absolute -top-1 -right-1 bg-secondary text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\r\n                  {{ cartItemsCount() }}\r\n                </span>\r\n              }\r\n            </a>\r\n\r\n            <!-- User Menu -->\r\n            @if (isAuthenticated()) {\r\n              <div class=\"relative\" (click)=\"toggleUserMenu()\">\r\n                <button class=\"flex items-center space-x-2 text-gray-600 hover:text-primary transition-colors\">\r\n                  <div class=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center\">\r\n                    <span class=\"text-white text-sm font-medium\">\r\n                      {{ currentUser()?.username?.charAt(0).toUpperCase() }}\r\n                    </span>\r\n                  </div>\r\n                  <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n                  </svg>\r\n                </button>\r\n\r\n                @if (showUserMenu()) {\r\n                  <div class=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-strong py-2 z-50\">\r\n                    <a routerLink=\"/profile\" class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\r\n                      Mon Profil\r\n                    </a>\r\n                    <a routerLink=\"/profile/orders\" class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\r\n                      Mes Commandes\r\n                    </a>\r\n                    <hr class=\"my-1\">\r\n                    <button (click)=\"logout()\" class=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\r\n                      DÃ©connexion\r\n                    </button>\r\n                  </div>\r\n                }\r\n              </div>\r\n            } @else {\r\n              <div class=\"flex items-center space-x-4\">\r\n                <a routerLink=\"/auth/login\" class=\"text-gray-600 hover:text-primary transition-colors\">\r\n                  Connexion\r\n                </a>\r\n                <a routerLink=\"/auth/register\" class=\"btn-primary\">\r\n                  Inscription\r\n                </a>\r\n              </div>\r\n            }\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  `,\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n    searchQuery = \"\"\r\n    showUserMenu = signal(false)\r\n    isAuthenticated = signal(false)\r\n    currentUser = signal<User | null>(null)\r\n    cartItemsCount = signal(0)\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private cartService: CartService,\r\n        private router: Router,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.authService.currentUser$.subscribe((user) => {\r\n            this.currentUser.set(user)\r\n            this.isAuthenticated.set(!!user)\r\n        })\r\n\r\n        this.cartService.cart$.subscribe((cart) => {\r\n            const count = cart?.items.reduce((total, item) => total + item.quantity, 0) || 0\r\n            this.cartItemsCount.set(count)\r\n        })\r\n\r\n        if (this.isAuthenticated()) {\r\n            this.cartService.getCart().subscribe((cart) => {\r\n                this.cartService.updateCartState(cart)\r\n            })\r\n        }\r\n    }\r\n\r\n    onSearch() {\r\n        if (this.searchQuery.trim()) {\r\n            this.router.navigate([\"/products\"], {\r\n                queryParams: { search: this.searchQuery.trim() },\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleUserMenu() {\r\n        this.showUserMenu.update((show) => !show)\r\n    }\r\n\r\n    logout() {\r\n        this.authService.logout()\r\n        this.showUserMenu.set(false)\r\n    }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAeC,MAAM,QAAQ,eAAe;AAC9D,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAqB,iBAAiB;AAC3D,SAASC,WAAW,QAAQ,gBAAgB;AAoGrC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAOxBC,YACYC,WAAwB,EACxBC,WAAwB,EACxBC,MAAc;IAFd,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IATlB,KAAAC,WAAW,GAAG,EAAE;IAChB,KAAAC,YAAY,GAAGV,MAAM,CAAC,KAAK,CAAC;IAC5B,KAAAW,eAAe,GAAGX,MAAM,CAAC,KAAK,CAAC;IAC/B,KAAAY,WAAW,GAAGZ,MAAM,CAAc,IAAI,CAAC;IACvC,KAAAa,cAAc,GAAGb,MAAM,CAAC,CAAC,CAAC;EAMvB;EAEHc,QAAQA,CAAA;IACJ,IAAI,CAACR,WAAW,CAACS,YAAY,CAACC,SAAS,CAAEC,IAAI,IAAI;MAC7C,IAAI,CAACL,WAAW,CAACM,GAAG,CAACD,IAAI,CAAC;MAC1B,IAAI,CAACN,eAAe,CAACO,GAAG,CAAC,CAAC,CAACD,IAAI,CAAC;IACpC,CAAC,CAAC;IAEF,IAAI,CAACV,WAAW,CAACY,KAAK,CAACH,SAAS,CAAEI,IAAI,IAAI;MACtC,MAAMC,KAAK,GAAGD,IAAI,EAAEE,KAAK,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC;MAChF,IAAI,CAACb,cAAc,CAACK,GAAG,CAACG,KAAK,CAAC;IAClC,CAAC,CAAC;IAEF,IAAI,IAAI,CAACV,eAAe,EAAE,EAAE;MACxB,IAAI,CAACJ,WAAW,CAACoB,OAAO,EAAE,CAACX,SAAS,CAAEI,IAAI,IAAI;QAC1C,IAAI,CAACb,WAAW,CAACqB,eAAe,CAACR,IAAI,CAAC;MAC1C,CAAC,CAAC;;EAEV;EAEAS,QAAQA,CAAA;IACJ,IAAI,IAAI,CAACpB,WAAW,CAACqB,IAAI,EAAE,EAAE;MACzB,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE;QAChCC,WAAW,EAAE;UAAEC,MAAM,EAAE,IAAI,CAACxB,WAAW,CAACqB,IAAI;QAAE;OACjD,CAAC;;EAEV;EAEAI,cAAcA,CAAA;IACV,IAAI,CAACxB,YAAY,CAACyB,MAAM,CAAEC,IAAI,IAAK,CAACA,IAAI,CAAC;EAC7C;EAEAC,MAAMA,CAAA;IACF,IAAI,CAAC/B,WAAW,CAAC+B,MAAM,EAAE;IACzB,IAAI,CAAC3B,YAAY,CAACQ,GAAG,CAAC,KAAK,CAAC;EAChC;CACH;AA/CYd,eAAe,GAAAkC,UAAA,EA/F3BvC,SAAS,CAAC;EACPwC,QAAQ,EAAE,YAAY;EACtBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACxC,YAAY,EAAEC,YAAY,EAAEC,WAAW,CAAC;EAClDuC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA0Fb,CAAC,C,EACWtC,eAAe,CA+C3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}